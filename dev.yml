version: '3'
services:
  ########### DJANGO
  django:
    image: dev_django:latest
    restart: always
    build:
      context: .
      dockerfile: docker_django.dockerfile
    volumes:
      - uploads:/django/uploads:rw
      - .:/django:rw
    ports:
      - 8000
    env_file:
      - .env
    environment:
      - DEBUG=True
      - BASE_SITE_URL=http://localhost
      - USE_PRODUCTION_DB=False
    container_name: django
    command: 
      - /bin/sh
      - -c 
      - | 
        python manage.py migrate && python manage.py runserver 0.0.0.0:8000
    depends_on:
      - redis
  ########### REDIS
  redis:
    image: redis:alpine
    container_name: redis
    env_file:
      - .env
  ########### HUEY
  queue:
    image: dev_queue:latest
    restart: always
    build:
      context: .
      dockerfile: docker_django.dockerfile
    command: 
      - /bin/sh
      - -c 
      - |
        python manage.py run_huey
    volumes:
      - uploads:/django/uploads:rw
      - ./db:/django/db:rw
      - .:/django
    container_name: huey
    env_file:
      - .env
    environment:
      - DEBUG=True
      - USE_PRODUCTION_DB=False
    depends_on:
      - redis
      - django
########### NGINX
  nginx:
    image: dev_nginx:latest
    restart: always
    build: 
      context: .
      dockerfile: docker_nginx.dockerfile
    ports:
      - 80:80
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf
    container_name: nginx
    depends_on:
      - django

  # The postgres image is just for development--should use a managed db service (RDS)
  db:
    image: dev_postgres:latest
    build:
      context: .
      dockerfile: docker_postgres.dockerfile
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - .env
    container_name: postgres_dev

volumes:
  uploads: